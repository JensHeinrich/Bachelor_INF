
% Encoding: UTF-8
@entry{OWD,
  short = {OWD},
  long = {One-Way Delay},
  description = {The time a packet uses through a network from one host to another},
}


@acronym{isbn,
  short = {ISBN},
  long = {international standard book number}
}

@acronym{isbn10,
  short = {\glsxtrp{name}{isbn}-10},
  long = {international standard book number}
}

@acronym{isbn13,
  short = {\glsxtrp{name}{isbn}-13},
  long = {international standard book number}
}

@entry{ean,
  short = {EAN},
  long = {european article number},
  description = {ersetzt durch \gls{gtin}},
}


@acronym{iban,
  short = {IBAN},
  long = {International Bank Account Number}
}

@acronym{utf-8,
  short = {UTF-8},
  long = {{Unicode} Transformation Format -- 8-bit \cite[2.5]{unicode-12.1.0}}
}

@acronym{ascii,
  short = {ASCII},
  long = {American Standard Code for Information Interchange}
}

@acronym{gtin,
  short = {GTIN},
  long = {global trade identification number}
}

@acronym{nasa,
  short = {NASA},
  long = {National Aeronautics and Space Administration}
}

% Encoding: UTF-8
@acronym{zb,
  short = {z.B.},
  long = {zum Beispiel}
}

@acronym{bzw,
  short = {bzw.},
  long = {beziehungsweise}
}

@acronym{etc,
  short = {etc.},
  long = {et cetera}
}

@acronym{usw,
  short = {usw.},
  long = {und so weiter}
}

@entry{vim,
  name = {\protect\citetitle{vim}},
  description = {%
		\texttt{Vi Improved}
	}
}

% Encoding: UTF-8
@entry{alt,
  maccusative = {alten},
  mdefnominative = {der alte},
  plural = {alt},
  mdative = {alten},
  name = {Alt},
  description = {old},
  mnominative = {alter},
  text = {alt},
  mdefgenitive = {dem alten},
  mgenitive = {altem}
}

@entry{LED,
  plural = {LEDs},
  name = {LED},
  description = {light emitting diode},
  firstplural = {{\glsxtrp{description}{LED}s (\glsxtrp{plural}{LED})}
},
  first = {\glsxtrp{description}{LED} (\glsxtrp{name}{LED})}
}

@entry{ecc,
  maccusative = {Fehlererkennenden
		\glsxtrp{name}{code}
	},
  plural = {fehlerkorrigierende Codes},
  name = {fehlerkorrigierender Code},
  description = {Ein Code,
		welcher eine definierte Anzahl
		von Fehlern sicher korrigieren kann}
}

@entry{edc,
  plural = {fehlererkennende Codes},
  name = {fehlererkennender \
	\glsxtrp{name}{code}},
  description = {Ein Code,
		welcher eine definierte Anzahl
		von Fehlern sicher erkennen kann}
}

@entry{abelian,
  name = {Abelsch},
  description = {}
}

@entry{generatormatrix,
  symbol = {\GeneratorG},
  name = {Erzeugermatrix},
  description = {}
}

@entry{paritycheckmatrix,
  symbol = {\ParityCheckH},
  name = {Pr\"ufmatrix},
  description = {}
}

@entry{codeword,
  plural = {Codew\"orter},
  name = {Codewort},
  description = {}
}

@entry{codingtheory,
  name = {Codierungstheorie},
  description = {}
}

@entry{information-set,
  name = {Information Set},
  description = {}
}

@entry{information-symbol,
  name = {Informationssymbol },
  description = {}
}

@entry{information-set-decoding,
  name = {Decodieren mit einem
	\glsxtrp{name}{information-set}},
  description = {}
}

@entry{decoder,
  symbol = {\DecoderD},
  name = {Decoder},
  description = {Ein Decoder \"uberf\"uhrt
		ein \gls{word} in ein
		\gls{in-word}
	}
}

@entry{in-word,
  name = {Daten-Wort},
  description = {Ein Element aus
		\(\text{\gls{alphabet}}^m\).
	}
}

@entry{goppa-class,
  name = {Goppa-Klasse},
  description = {Die Klasse
		der Goppa Codes}
}

@entry{goppa,
  plural = {Goppa
		\glsxtrp{plural}{code}},
  name = {Goppa Code},
  description = {}
}

@entry{prim,
  name = {prim},
  description = {%
		\(p\) prim,%
		dann gilt f\"ur%
		\(x\vert p\)
		\(x=p\) oder
		\(x=1\)
	}
}

@entry{code-word,
  symbol = {\Codewordc},
  plural = {Codew\"orter},
  name = {Codewort},
  description = {Element eines \glsxtrp{symbol}{code}}
}

@entry{linear-code,
  maccusative = {linearen \glsxtrp{name}{code}},
  mdefnominative = {der lineare
		\glsxtrp{name}{code}},
  plural = {lineare \glsxtrp{plural}{code}},
  mdative = {linearen
		\glsxtrp{name}{code}},
  name = {linearer \glsxtrp{name}{code}},
  description = {},
  mgenitive = {linearen \glsxtrp{plural}{code}}
}

@entry{code-dimension,
  name = {Dimension},
  description = {}
}

@entry{hamming-distance,
  name = {Hamming~-Distanz},
  description = {}
}

@entry{hamming-weight,
  name = {Hamming~-Gewicht},
  description = {}
}

@entry{metric,
  name = {Metrik},
  description = {}
}

@entry{iff,
  name = {genau dann, wenn},
  description = {}
}

@entry{nearest-neighbor-decoding,
  name = {N\"achster Nachbar Decodierung},
  description = {{Decodierungsmethode,
		die \"uber alle m\"oglichen
		\glsxtrp{plural}{code-word}
		iteriert und das
		mit der geringsten
		Entfernung zur\"uckgibt}
}
}

@entry{word,
  symbol = {\Wordw},
  plural = {W\"orter},
  name = {Wort},
  description = {Element eines \ensuremath{\glsxtrp{symbol}{alphabet}^n}}
}

@entry{nearest-neighbor-decoder,
  name = {N\"ahester Nachbar Decoder},
  description = {}
}

@entry{encoder,
  name = {Encoder},
  description = {{Ein Encoder
	\"uberf\"urt Daten
	(bzw\@. \glspl{in-word})
	in \glspl{code-word}.}
}
}

@entry{encode,
  name = {encodieren},
  description = {}
}

@entry{capability,
  symbol = {\capdelta},
  name = {Korrekturf\"ahigkeit},
  description = {}
}

@entry{rate,
  symbol = {\rateR},
  name = {Rate},
  description = {}
}

@entry{pid,
  name = {Hauptidealring},
  description = {}
}

@entry{gsoc,
  name = {Google Summer of Code},
  description = {}
}

@entry{reed-solomon-code,
  symbol = {\ensuremath{\CodeC_{RS}}},
  name = {Reed-Solomon Code},
  description = {}
}

@entry{generalized-reed-solomon-code,
  symbol = {\ensuremath{\CodeC_{GRS}}},
  maccusative = {generalisierter
		\glsxtrp{name}{code}
	},
  name = {generalisierte \glsxtrp{name}{reed-solomon-code}},
  description = {},
  mgenitive = {generalisierten
		\glsxtrp{name}{code}
	}
}

@entry{alternant-code,
  symbol = {\ensuremath{\CodeC_{A}}},
  name = {Alternant \glsxtrp{name}{code}},
  description = {}
}

@entry{goppa-code,
  symbol = {\protecting{\ensuremath{\CodeC\left(L,g\right)}}},
  name = {Goppa Code},
  description = {algebraisch Geometrishcer Code wie in Abschnitt~\ref{sec:codes-goppa}}
}

@entry{divisor,
  symbol = {\DivisorD},
  name = {Divisor},
  description = {}
}

@entry{projective-line,
  name = {Projektive Gerade},
  description = {}
}

@entry{minimum-distance-decoder,
  name = {Minimumdistance Decoder},
  description = {}
}

@entry{maximum-likelihood-decoder,
  name = {Maximum Likelihood Decoder},
  description = {}
}

@entry{generator-polynomial,
  name = {Erzeugerpolynom},
  description = {}
}

@entry{alphabet,
  symbol = {\ensuremath{\mathcal{A}}},
  name = {Alphabet},
  description = {Menge an Zeichen}
}

@entry{equation-system,
  name = {Gleichungssystem},
  description = {Menge an Gleichungen mit einer gleichzeitigen L\"osung}
}
@entry{systematic-code,
  maccusative = {systematischen
		\glsxtrp{name}{code}},
  name = {systematischer
		\glsxtrp{name}{code}},
  description = {Ein \gls{code}, bei dem alle \glspl{code-word} die gleiche L\"ange haben},
	maccusative={systematischen
		\glsxtrp{name}{code}}
}

@entry{error-word,
  symbol = {\Errore},
  name = {Fehler},
  description = {Fehler in einem empfangenen \gls{word}},
  mgenitive = {Fehlers}
}

@entry{hamming-code,
  name = {Hamming \glsxtrp{name}{code}},
  description = {Ein
		\glsxtrp{name}{ecc}
		nach der
		Definiton~\ref{def:hamming-code}
	}
}

@entry{check-number,
  symbol = {\ensuremath{p_i}},
  name = {Pr\"ufziffer},
  description = {}
}

@entry{error-locator,
  symbol = {\ensuremath{\tilde{e}}},
  name = {Errorlocator},
  description = {}
}

@entry{support,
  symbol = {\ensuremath{p_i}},
  name = {Erzeugendensystem},
  description = {Menge von Elementen,
die ein Objekt erzeugen k\"onnen;
diese Menge muss nicht minimal sein.}
}

@entry{space-rational-functions,
  symbol = {\LinearL},
  name = {Raum der rationalen Funktionen},
  description = {}
}

@entry{degree,
  symbol = {\ensuremath{d}},
  name = {Grad},
  description = {}
}

@entry{algebraic-closure,
  name = {Algebraischer Abschluss},
  description = {}
}

@entry{genus,
  symbol = {\genusg},
  name = {Geschlecht},
  description = {}
}

@entry{goppa-polynomial,
  name = {Goppa-Polynom},
  description = {\gls{generator-polynomial} eines \gls{goppa-code}}
}

@entry{plausibility-check,
  name = {Plausibilit\"ats-Check},
  description = {\"Uberpr\"ufung,
	ob ein Objekt i\enquote{plausibel}
	ist; dies kann bedeuten zupr\"ufen,
	ob es in dem erwarteten Raum ist}
}

@entry{dual-code,
  name = {dualer Code},
  description = {\glsxtrp{name}{code},
	der aus allen
	\glsxtrp{plural}{word}
	besteht,
	deren Skalarprodukt mit allen
	\glsxtrp{plural}{code-word}
	verschwindet
	},
  mdefgenitive = {des dualen Codes}
}

@entry{qr-code,
  name = {QR-Code},
  description = {\enquote{Quick Response}-Code},
  mdefgenitive = {des dualen Codes}
}

@entry{class-np,
  name = {\texttt{NP}},
  description = {}
}

@entry{class-np-complete,
  name = {\texttt{NP}-Vollst\"andig},
  description = {}
}

@entry{sourcecode,
  name = {Quellcode},
  description = {Nicht kompilierter Programm code}
}

@entry{morse-code,
  name = {Morsecode},
  description = {Von \citeauthor{Morse}
		entwicklerter Code,
		der Buchstaben
		\bzw
		W\"orter als Sequenzen von
		\emph{Dit},
		\emph{Dah}
		und
		Pausen
		darstellt}
}

@entry{algebraic-curve,
  symbol = {\ensuremath{\CurveC_\Functionf}},
  plural = {algebraische Kurven},
  name = {algebraische Kurve},
  description = {Menge der L\"osungen einer
	\gls{diophantine-equation}
	\( \Functionf\left(x,y\right)=0\)
	}
}

@entry{diophantine-equation,
  name = {Diophantische Gleichung},
  description = {Gleichung
		mit ganzzahligen Koeffizienten
		auf den ganzen Zahlen}
}

@entry{code-basis,
  name = {Basis},
  description = {%
		Minimale Menge
		von \glsxtrp{plural}{code-word}n,%
		die den \glsxtrp{name}{code}
		erzeugen
	}
}

@entry{field,
  symbol = {\ensuremath{k}},
  name = {K\"orper},
  description={
    Ring mit inversen bez\"uglich der Multiplikaton
  },
}

@entry{binom-coefficient,
  name = {Binomialkoeffizient},
  description = {Anzahl der M\"oglichkeiten
		\( k\) Elemente aus \(n\) Elementen
		auszuw\"ahlen
	ohne Beachtung Reihenfolge}
}

@entry{hyperbola,
  name = {hyperbel},
  description={},
}

@entry{gnu-fdl,
  name = {GNU FDL},
  description={},
}

@entry{creativecommons:3.0:ccbysa,
  name = {CC-BY-SA-3.0},
  description = {%
		CreativeCommons
		Namensnennung
		ShareAlike
		Version 3.0
	}
}

@entry{creativecommons:4.0:ccbysa,
  name = {CC-BY-SA-4.0},
  description = {%
		CreativeCommons
		Namensnennung
		ShareAlike
		Version 4.0}
}

@entry{creativecommons:4.0:ccbyncsa,
  name = {CC-BY-NC-SA-4.0},
  description = {%
		CreativeCommons
		Namensnennung
		NonComercial
		ShareAlike
		Version 4.0}
}

@entry{entropy,
  symbol = {\ensuremath{H}},
  name = {Entropie},
  description = {%
		Mass f\"ur die Unordnung
	}
}

@entry{capacity,
  symbol = {\ensuremath{C}},
  name = {Kapazit\"at},
  description={
    obere Grenze f\"ur die Menge an \"ubertragener Information
  },
}

@entry{channel,
  name = {Kanal},
  description = {%
		Medium,%
		\"uber welches%
		Daten \"ubertragen%
		werden%
	}
}

@entry{source,
  name = {Quelle},
  description = {%
		Ausgangspunkt%
		von Signalen%
	}
}

@entry{equivocation,
  name = {\"Aquivokation},
  description = {Menge an Informationen,
		die bei der \"Ubertragung auf einem
		\glsxtrp{name}{channel} verloren
		geht.
	}
}

@entry{burst-correction,
  name = {Burst-Correction},
  description = {Korrektur
		von aufeinander folgendenden
		Fehlern;
		Gegensatz zur Korrektur von
		zuf\"allig verteilten Fehlern.
	}
}

@entry{galois-field,
  symbol = {\ensuremath{\mathbb{F}}},
  name = {endlicher K\"orper},
  description = {%
		K\"orper mit einer%
		endlichen Anzahl%
		an Elementen
	}
}

@entry{bit,
  name = {Bit},
  description = {Element aus
		\glsxtrp{symbol}{galois-field}}
}

@entry{interleaving,
  symbol = {\ensuremath{\mathcal{I}}},
  name = {Verwebung},
  description = {%
		\"Uberlagern von%
		\glsxtrp{plural}{code-word},%
		um die Eigenschaften des%
		so erzeugten%
		\glsxtrp{name}{code}%
		zu beeinflussen.
	}
}

@entry{cyclic,
  name = {zyklisch},
  description = {bez\"uglich
		Multiplikation
		abgeschlossen?
	}
}

@entry{identitymatrix,
  symbol = {\MatrixI},
  name = {Einheitsmatrix},
  description = {%
		quadratische Matrix%
		auf deren Diagonale%
		\(1\) steht,
		w\"ahrend alle anderen%
		Eintr\"age \(0\) sind%
		}
}

@entry{grs-template,
  symbol = {\ensuremath{\Vectorg}},
  name = {Template},
  description = {%
		Vorfaktoren eines%
\glsxtrp{name}{generalized-reed-solomon-code}
	}
}

@entry{fourier-convolutional,
  name = {Faltungseigenschaft},
  description = {Die \glsxtrp{name}{fourier-transformation}
		stellt eine Verbindung
		zwischen Faltungen
	und Br\"uchen her}
}

@entry{subfield-subclass-code,
  name = {Untercode},
  description = {%
		In Code,%
		der die Teilmenge%
		eines anderen%
		\glsxtrp{plural}{code}%
		und in sich abgeschlossen%
	ist.}
}

@entry{fourier-transformation,
  name = {Fourier-Transformation},
  description={},
}

