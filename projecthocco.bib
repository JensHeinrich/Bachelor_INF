% Encoding: UTF-8
%comment{This file was created with betterbib v4.0.0.}


@entry{2-man-rule,
	description-de = {Sicherheitspolitische Massnahme, die erfordert, dass kritische Aufgaben nicht alleine durchgef\"uhrt werden.},
	name = {4-Augen-Prinzip},
}

@entry{PR,
	description-de = {Vorschlage einen \Gls {branch} zu mergen.},
	long = {Pull-Request},
	see = {git,branch},
	short = {PR},
}

@index{alias,
	name = {alias},
}

@entry{ansible-lint,
	name = {ansible-lint},
	description-de = {\gls {linter} f\"ur \glspl {ansible:playbook} und \glspl {ansible:role}},
	parent = {ansible},
}

@entry{ansible:cli,
	name = {ansible-Kommandozeilenapplikation},
	description-de = {Anwendung, um direkt mit den \glspl {ansible:module} interagieren zu k\"onnen},
	parent = {ansible},
}

@entry{ansible:collection,
	name = {Ansible Collection},
	description-de = {Eine Zusammenstellung aus \glspl {ansible:role}, \glspl {ansible:module} und \glspl {ansible:plugin}.},
	parent = {ansible},
}

@entry{ansible:collections:containerspodman,
	name = {\lstinline {containers.podman}-Collection},
	description-en = {An \gls {ansible:collection} providing modules to interact with podman},
	description-de = {Eine \gls {ansible:collection}, welche Module zur Interatktion mit \gls {podman} zur Verf\"ugung stellt},
	parent = {ansible},
}

@entry{ansible:galaxy,
	name = {\glsxtrp {name}{ansible}-galaxy},
	description-de = {Werkzeug, um \glspl {ansible:role} aus der gleichnamigen Plattform zu beziehen; unterst\"utzt auch das Kopieren von \glspl {ansible:role} aus anderen \glspl {versioncontrolsystem}},
	parent = {ansible},
}

@entry{ansible:module,
	name = {Modul},
	description-de = {Abgeschlossene Codeeinheit, die direkt durch die \gls {ansible:cli} oder aus einem \gls {ansible:playbook} aufgerufen werden kann, wird teilweise auch als \foreigntextquote {english}[\autocite {ansible:userguide:moduleintro}]{ task plugin\textdel {s} } oder \foreigntextquote {english}[\autocite {ansible:userguide:moduleintro}]{ library plugin\textdel {s} } bezeichnet},
	parent = {ansible},
}

@entry{ansible:play,
	name = {Play},
	description-de = {Sammlung von \glspl {ansible:task} und \glspl {ansible:role}, welche auf eine Gruppe von Systemen angewedet werden},
	parent = {ansible},
}

@entry{ansible:playbook,
	name = {Playbook},
	description-de = {Sammlung von \glspl {ansible:play}, welche nacheinander ausgef\"uhrt werden},
	parent = {ansible},
}

@entry{ansible:plugin,
	name = {Plugin},
	description-de = {Code der die Grundfunktionalit\"at von \gls {ansible} erweitert},
	parent = {ansible},
}

@entry{ansible:role,
	name = {Rolle},
	plural = {Rollen},
	description-de = {Zusammenstellung von Variablen, \foreignquote {english}{Tasks} und \foreignquote {english}{Handlers} um ein System mit \gls {ansible} zu konfigurieren},
	parent = {ansible},
}

@entry{ansible:task,
	name = {Task},
	description-de = {Aufruf eines \gls {ansible:module} mit den dazu ben\"otigten Parametern},
	parent = {ansible},
}

@entry{ansible:vault,
	name = {Ansible Vault},
	description-de = {in \gls {ansible} integriertes Werkzeug zur Ver- und Entschl\"usselung von Daten},
}

@abbreviation{api,
	short = {API},
	long = {Application-Programming-Interface},
	description-de = {Schnittstelle, \"uber welche mit einer Application kommuniziert werden kann.},
}

@entry{awx,
	name = {AWX},
	description-de = {Entwicklungsvariante von \gls {tower}, einer L\"osung um \gls {ansible} \"uber eine \gls {restapi} und eine Webanwendung f\"ur einen gr\"osseren Nutzerkreis zug\"anglich zu machen},
}

@entry{bird,
	name = {bird},
	description = {feathered animal},
}

@entry{bitbucket,
	name = {Bitbucket},
	url = {https://about.gitlab.com/},
	description-de = {Eine Plattform und Software, die \gls {git}, \gls {ci-cd} und mehr kombiniert und dabei tief in das Atlassian-Ecosystem integriert ist},
}

@entry{branch,
	description-de = {Eine Zusammenfassungen von mehreren einzelnen \Glspl {commit} im Rahmen eines \Gls {versioncontrolsystem}},
	name = {Branch},
	see = {commit},
	seealso = {git},
}

@entry{build,
	description-de = {Aus Code generiertes, einsatzbereites Fragment},
	name = {Build},
}

@entry{centos,
	name = {CentOS},
	description-de = {Freies \gls {os} der Firma \gls {redhat}},
}

@acronym{ci-cd,
	description-de = {Verkn\"upfung von \gls {continuous-integration} und \gls {continuous-delivery} {\autocite {Redhat:DE:CI-CD}}},
	see = {ci-cd-pipeline},
	short = {CI/CD},
}

@entry{ci-cd-cd-pipeline,
	first = {\glsxtrp {short}{ci-cd}[eployment]-\glsxtrp {name}{pipeline}\glslocalreset {ci-cd-pipeline}},
	description-de = {Kombination einer \gls {ci-cd-pipeline} mit einer \gls {continuous-delivery}-L\"osung zu einer \gls {pipeline}},
	name = {\glsxtrp {name}{ci-cd}-\glsxtrp {name}{pipeline}},
}

@entry{ci-cd-pipeline,
	name = {\glsxtrp {short}{ci-cd}-\glsxtrp {name}{pipeline}},
	first = {\glsxtrp {short}{ci-cd}[elivery]-\glsxtrp {name}{pipeline}\glslocalreset {ci-cd-cd-pipeline}},
	description-de = {eine \gls {pipeline}, welche \gls {continuous-integration} und \gls {continuous-delivery} kombiniert \autocite {codefresh:pipeline}},
}

@event{ciderseccon,
	url = {https://cidersecuritycon.de/},
	name = {CiderSecurityCon},
	description-de = {Eine Konferenz mit Fokus auf Security in Mannheim},
}

@entry{commit,
	description-de = {Eine Gruppe von \"Anderungen, die von einem \Gls {versioncontrolsystem} gespeichert wird.},
	name = {Commit},
	see = {branch},
	seealso = {git},
}

@index{configmanagement,
	name = {Konfigurationsmanagement},
}

@index{configmanagementsolution,
	name = {{}\gls {configmanagement}-L\"osung},
}

@index{configstate,
	name = {Konfigurationsstand},
}

@entry{container,
	name = {Container},
	description-de = {Form der Virtualisierung, bei der Teile des Betriebssystems direkt mit dem virtualisierten Prozess geteilt werden},
	seealso = {vm},
}

@entry{container-engine,
	name = {Container-Engine},
	description-de = {\gls {hypervisor} f\"ur \glspl {container}},
}

@acronym{continuous-delivery,
	description-de = {Prozess der im Anschluss an die \gls {continuous-integration} die fertigen \glspl {build} zur Verf\"ugung stellt \autocite {Redhat:DE:CI-CD,Kabir2017}},
	long = {continuous delivery},
	short = {CD},
	parent = {ci-cd},
}

@acronym{continuous-deployment,
	description-de = {Prozess der die fertigen \Gls {build} des \Gls {continuous-delivery} auf die Systeme installiert {\autocite {Redhat:DE:CI-CD}}},
	long = {Continuous Deployment},
	short = {CD},
	parent = {ci-cd},
}

@acronym{continuous-integration,
	description-de = {Zusammenf\"uhren des Codes in einem zentralen \gls {repo} durch eine \gls {merge}; h\"aufig verbunden mit grundlegenden Tests {\autocite {Redhat:DE:CI-CD,Kabir2017}}},
	parent = {ci-cd},
	description-en = {\foreigntextquote {english}[\autocite {Kabir2017}]{ a phase in the software development cycle where code from different team members or different features are integrated together. This usually involves merging code (integration), building the application and carrying out basic tests all within an ephemeral environment}},
	long = {continuous integration},
	short = {CI},
}

@abbreviation{dba,
	short = {DBA},
	long = {Datenbankadministrator},
	longplural = {Datenbankadministratoren},
}

@entry{dev-branch,
	description-de = {Der \gls {branch} des Projektes, auf dem die eigentliche Entwicklung stattfindet, und aud dem entsprechend die \glspl {feature-branch} aufbauen.},
	name = {\texttt {dev}-Branch},
	parent = {branch},
}

@entry{docker,
	name = {Docker},
	description-de = {eine \gls {container-engine}},
	url = {docker.com},
}

@entry{drone,
	name = {Drone},
	url = {drone.io},
	description-de = {Eine \gls {docker}-basierte \gls {ci-cd}-L\"osung},
}

@entry{feature,
	description-de = {Eine Funktion oder \"Anderung einer Funktion, die eine abgeschlossene Einheit darstellt.},
	name = {Feature},
}

@entry{feature-branch,
	description-de = {\gls {branch} eines \gls {versioncontrolsystem}, auf dem ein \gls {feature} entwickelt wird.},
	name = {Feature-Branch},
	parent = {branch},
}

@abbreviation{floss,
	long = {Free Libre Open Source Software},
	parent = {oss},
	short = {FLOSS},
}

@entry{fork,
	name = {Fork},
	description-de = {Prozess einen neuen \gls {branch} auf einem bestimmten Punkt eines bestehenden \gls {branch} zu beginnen; wird auch benutzt, um die Abspaltung eines neuen Projektes von einem bestehenden Projekt zu bezeichnen},
}

@abbreviation{foss,
	description-de = {Software, die die 4 Freiheiten \begin {itemize} \item Verwenden \item Verstehen \item Verbreiten \item Verbessern \end {itemize} \autocite {fsfe:de:freesoftware} der \gls {fsfe} bzw. der \gls {fsf} erf\"ullt.},
	long = {Free Open Source Software},
	parent = {oss},
	short = {FOSS},
	url = {https://fsfe.org/freesoftware/freesoftware.de.html},
}

@abbreviation{fsf,
	short = {FSF},
	long = {Free Software Foundation},
	description-de = {\foreigntextquote {english}[\autocite {fsf:main}]{The Free Software Foundation (FSF) is a nonprofit with a worldwide mission to promote computer user freedom. We defend the rights of all software users.}},
	url = {https://www.fsf.org/},
}

@abbreviation{fsfe,
	short = {FSFE},
	long = {Free Software Foundation Europe},
	url = {https://fsfe.org/},
	description-de = {NGO mit dem Ziel Entwickler und Firmen von den Prinzipien von \gls {foss} zu \"uberzeugen},
}

@entry{git-repo,
	description-de = {Ein \gls {repo}, das mit \gls {git} verwaltet wird.},
	name = {\texttt {git}-Repository},
	see = {git,repo},
	parent = {git},
}

@entry{git-submodule,
	description-de = {Ein Feature von \gls {git} ein weiteres \gls {git-repo} einzubinden, um z.B. Bibliotheken in ein grossen Projekt einzubinden.},
	name = {\texttt {git}-Submodule},
	parent = {git},
}

@entry{git:hook,
	name = {\texttt {git}-Hook},
	description-de = {Software, die von \gls {git} zwischen internen Verarbeitungsschritten aufgerufen wird},
	parent = {git},
}

@entry{git:push,
	name = {Push},
	description-de = {Senden von \glspl {commit} an ein \gls {repo}},
	parent = {git},
}

@entry{github,
	name = {GitHub},
	url = {https://github.com},
	description-de = {\foreigntextquote {english}[\autocite {github:Homepage}]{ GitHub is a development platform inspired by the way you work }},
}

@entry{gitlab,
	name = {GitLab},
	url = {https://about.gitlab.com/},
	description-de = {Eine Plattform und Software, die \gls {git}, \gls {ci-cd} und mehr kombiniert},
}

@entry{gogs,
	name = {Gogs},
	url = {https://gogs.io/},
	description-de = {\foreigntextquote {english}[\autocite {gogs:Homepage}]{ A painless self-hosted Git service }},
}

@index{goose,
	plural = {geese},
}

@entry{hashicorp-vault,
	name = {Hashicorp Vault},
	description-de = {Zentrale Geheimnisverwaltung der Firma Hashicorp, die auch als \gls {foss} L\"osung zur Verf\"ugung steht.},
	url = {https://www.vaultproject.io/},
}

@abbreviation{html,
	short = {html},
	long = {hypertext markup language},
}

@entry{hypervisor,
	name = {Hypervisor},
	description-de = {Software, welche die Umgebung von \glspl {vm} verwaltet und teilweise auch Hardware emuliert},
}

@acronym{ids,
	short = {IDS},
	long = {\foreignquote {english}{intrusion detection system}},
	description-de = {System, welches (unbefugte) Eindringlinge detektieren soll; dies geschieht h\"aufig durch das \"uberwachen bestimmter Dateien, wie z.B. \texttt {/etc/passwd}, auf \"Anderungen},
}

@entry{infrastructure-as-code,
	description-de = {Die gesamte Infrastruktur kann maschinell aus dem Code erzeugt werden},
	long = {Infrastructure-as-Code},
	short = {IaC},
}

@acronym{json,
	short = {JSON},
	long = {JavaScript Object Notation},
	url = {https://www.json.org},
	description-de = {\foreigntextquote {english}[\autocite {json:Homepage}]{ JSON (JavaScript Object Notation) is a lightweight data-interchange format }},
	seealso = {toml,yaml},
}

@entry{kubernetes,
	short = {K8s},
	long = {Kubernetes},
	url = {https://kubernetes.io/},
	description-de = {\foreigntextquote {english}[\autocite {kubernetes:Homepage}]{ Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications. }},
	see = {container},
}

@entry{least-privilege-principle,
	short = {PoLP},
	long = {\foreignquote {english}{Least-Privilege}-Prinzip},
	description-de = {Konzept aus der Informationssicherheit\autocite {datacom:polp}, bei dem \textquote [\autocite {staatsdruckerei-at:leastpriv}]{ \textins *{j}eder Benutzer \textins {und jedes System} \textdel {soll} genau jene Berechtigungen \textelp {hat}, die er ben\"otigt, um seine Aufgaben zu erledigen -- und nicht mehr. }},
}

@entry{linter,
	name = {Linter},
	description-de = {Software, welche formale Anforderungen an eine Datei stellt und diese meist auch herstellen kann},
}

@entry{loosecoupling,
	name = {\enquote {Lose Kopplung}},
	description-de = {eine geringe Abh\"angigkeit von verschiedenen \glspl {service} voneinander und damit ein grosser Freiheitsgrad f\"ur die Implementierungen der einzelnen \glspl {service} \autocite {newman2019monolith}},
}

@acronym{m2m,
	short = {M2M},
	long = {Maschine-to-Machine},
}

@entry{m2m-secrets,
	name = {\glsps {m2m}-Secrets},
	first = {\glsps {m2m}(\glspt {m2m})-Secrets},
	description-de = {Secrets, die nur f\"ur die \gls {m2m}-Kommunikation ben\"otigt werden, die also nicht von Menschen genutzt werden},
}

@entry{managmenttool,
	description-de = {Software, um den Zustand von Systemen zu ver\"andern; dies kann z.B. bedeuten sie neuzustarten oder Software zu installieren bzw. zu konfigurieren.},
	name = {Management-Tool},
	seealso = {ansible},
}

@entry{master-branch,
	description-de = {Der \gls {branch} des Projektes, der die ver\"offentlichten Versionen enth\"alt.},
	name = {\texttt {master}-Branch},
	parent = {branch},
}

@entry{merge,
	name = {Merge},
	description-de = {Zusammenf\"uhren von nicht aufeinander aufbauenden \glspl {commit}},
	seealso = {git},
}

@entry{microservice,
	name = {Microservice},
	description-de = {\gls {service}, welcher nur einen bestimmten Teil eines gr\"osseren \gls {service} durchf\"uhrt},
}

@entry{organizationalchangemanagement,
	name = {Organisatorisches \"Anderungsmanagement},
	description-de = {Prozesse, um bestehende Strukturen innerhalb einer Oranganisation nachhaltig zu ver\"andern},
}

@acronym{os,
	short = {OS},
	long = {Operating System},
}

@abbreviation{oss,
	short = {OSS},
	long = {Open Source Software},
	description-de = {Software, deren Quellcode (\"offenlich) einsehbar ist},
}

@entry{phoenixsystem,
	name = {Phoenixsystem},
	plural = {Phoenixsysteme},
	description-de = {System, welches regelm\"assig neuinstalliert wird (wie ein Phoenix aus der Asche steigt) \autocite {Fowler2012:Phoenix}},
}

@entry{pipeline,
	name = {Pipeline},
	description-de = {Gruppe verschiedener Systeme, die nacheinander und voneinander abh\"angig auf dem gleichen Datensatz operieren {\autocite [2.4]{Liebel2017}}},
}

@entry{pod,
	name = {Pod},
	description-de = {mehrere zusammengeh\"orige \gls {container}, die als eine Einheit verwaltet werden},
}

@entry{podman,
	name = {Podman},
	description-de = {eine \gls {container-engine}, die keinen Daemon ben\"otigt und sowohl Container als root, als auch Container mit Nutzerrechten betreiben kann},
	url = {podman.io},
}

@entry{precommithook,
	name = {pre-commit-hook},
	description-de = {\gls {git:hook} der vor der Annahme des \gls {commit} ausgef\"uhrt wird},
	parent = {git:hook},
}

@entry{rebase,
	description-de = {Vorgang verschiedene \glspl {commit} neuzusortieren, sodass eine neue lineare Historie entsteht.},
	name = {Rebase},
	see = {git},
}

@entry{redhat,
	name = {RedHat},
	description-de = {\foreigntextquote {english}[\autocite {RedHat:Homepage}]{ We're the world's leading provider of enterprise open source solutions }},
	url = {https://www.redhat.com},
}

@entry{repo,
	description-de = {Eine Sammlung von verschiedenen \glspl {branch} und \glspl {commit}.},
	name = {Repository},
	plural = {Repositories},
}

@abbreviation{rest,
	short = {ReST},
	long = {Representational State Transfer},
	description-de = {\foreigntextquote {english}[\autocite {Fielding2000}]{ REST is defined by four interface constraints: identification of resources; manipulation of resources through representations; self-descriptive messages; and, hypermedia as the engine of application state. }},
}

@entry{restapi,
	name = {ReST-API},
	description-de = {\gls {api}, welche \gls {rest} implementiert},
}

@entry{rhel,
	name = {Redhat Enterprise Linux},
	description-de = {Kommerzielles \gls {OS} der Firma \gls {redhat}},
}

@entry{service,
	description-de = {Funktionalit\"at, die ein Nutzer wahrnimmt},
	name = {Service},
	plural = {Services},
}

@index{servicerole,
	name = {Servicerolle},
	plural = {Servicerollen},
	see = {ansible:role},
}

@entry{singlesourceoftruth,
	short = {SSOT},
	long = {\foreignquote {english}{single source of truth}},
	description-de = {Zentrale Anlaufstelle f\"ur Informationen, auf die sich Systeme und Nutzer verlassen k\"onnen und sollen \autocite {datacom:ssot}},
}

@entry{sles,
	short = {SLES},
	long = {SUSE Linux Enterprise Server},
	description-de = {Kommerzielles \gls {os} der Firma \gls {suse}},
}

@index{softwaremanagement,
	name = {Software-Management},
}

@index{softwaremanagementsolution,
	name = {{}\gls {softwaremanagement}-L\"osung},
}

@entry{suse,
	name = {SUSE},
	description-de = {\foreigntextquote {english}[\autocite {SUSE:Homepage}]{ We're the world's leading provider of enterprise open source solutions }},
	url = {https://www.suse.com},
}

@entry{toil,
	description-de = {Arbeiten, die manuell, wiederholt, automatisierbar, reaktiv und ohne langfristigen Gewinn sind. Diese Kategorie von Arbeiten skaliert in der Regel linear. \autocite {Rau2016}},
	name = {\foreignquote {english}{Toil}},
}

@acronym{toml,
	short = {TOML},
	long = {Tom's Obvious Minimal Language},
	url = {https://toml.io},
	description-de = {\foreigntextquote {english}[\autocite {toml:Homepage}]{ A config file format for humans. }},
	seealso = {yaml,json},
}

@entry{tower,
	name = {Red Hat Ansible Tower},
	description-de = {Kommerziell durch \gls {redhat} vermarktete und betreute Variante von \gls {awx}},
	see = {awx},
}

@entry{updatehook,
	name = {update-hook},
	description-de = {\gls {git:hook} der vor der Annahme des \gls {git:push} ausgef\"uhrt wird},
	parent = {git:hook},
}

@entry{uri,
	short = {\texttt {URI}},
	long = {Uniform Resource Identifier},
	seealso = {url},
}

@entry{url,
	description-de = {Spezialfall einer \gls {uri}},
	long = {Uniform Resource Locator},
	short = {\texttt {URL}},
}

@symbol{v,
	name = {$\vec {v}$},
	text = {\vec {v}},
	description = {a vector},
}

@entry{versioncontrolsystem,
	description-de = {Anwendung, die es erlaubt verschiedene Versionen einer Datei \"ubersichtlich zu verwalten. Dies wird oft dadurch abgebildet, dass nur \"Anderungen von einer Version zur darauffolgenden gespeichert werden; dadurch ben\"otigt man aufgrund einer kleinen \"Anderung nicht den doppelten Speicher.},
	name = {Versionskontrollsystem},
	plural = {Versionskontrollsysteme},
	seealso = {git},
}

@acronym{vm,
	short = {VM},
	long = {Virtuelle Maschine},
	plural = {Virtuelle Maschinen},
	description-de = {System, welches nicht direkt auf der Hardware, sondern im Rahmen eines \gls {hypervisor} l\"auft},
}

@entry{vmhost,
	name = {{}\gls {vm}-Host},
	description-de = {System, auf welchem \glspl {vm} unter einem \gls {hypervisor} betrieben werden},
}

@entry{woodpecker,
	name = {Woodpecker},
	url = {https://woodpecker.laszlo.cloud/},
	description-de = {\gls {fork} von \gls {drone}},
}

@acronym{yaml,
	short = {YAML},
	long = {YAML Ain't Markup Language},
	url = {https://yaml.org/},
	description-de = {\foreigntextquote {english}[\autocite {yaml:Homepage}]{ YAML is a human friendly data serialization standard for all programming languages }},
	seealso = {toml,json},
}

@Comment{jabref-meta: databaseType:bibtex;}
